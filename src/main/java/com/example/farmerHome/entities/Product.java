package com.example.farmerHome.entities;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.ws.rs.FormParam;
import javax.xml.bind.annotation.XmlRootElement;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

//@Component - disabled for @FormParam processing

@Scope("prototype") //one copy for each test case
@Entity
@Table(name="JPA_PRODUCT")
@EntityListeners({ProductLifecicleListener.class})
@NamedQueries({@NamedQuery(name="Product.findByPrice", query="select p from Product p where p.price between :min and :max"),
			   @NamedQuery(name="Product.findByExpiryDate", query="select p from Product p where p.expiry_date between :min and :max"),
			   @NamedQuery(name="Product.findByCategory", query="select p from Product p where p.category = :category")})

@XmlRootElement
public class Product implements Serializable { //manage serialization of Objects
	
	//we do not need @value/@FormParam as we defined it to be automatically generated by MySQL
	private int productId;
	
	
	//@Value("Default product name") - used for initial testing
	@FormParam("productName")
	private String name;
	
	//@Value("-1")
	@FormParam("price")
	private double price;
	
	//@Value("-1")
	@FormParam("quantity")
	private int quantity; 
	
	//@Value("-1")
	@FormParam("expiryDate")
	private int expiry_date;

	//@Value("Default product category")
	@FormParam("category")
	ProductCategories category;
	
	//@Value("Default product size")
	@FormParam("size")
	ProductSizes size;
	
	
	@Id //declaring the property as Primary Key
	@Column(name="product_Id") //column name
	@GeneratedValue(strategy=GenerationType.AUTO) //auto-numbering
	public int getProductId() {
		return productId;
	}

	public void setProductId(int productId) {
		this.productId = productId;
	}
	
	@Column(name="product_name", nullable=false, length=15)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name="product_price", nullable=false)
	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	@Column(name="product_quantity", nullable=false)
	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name="product_expiry_date", nullable=false)
	public int getExpiry_date() {
		return expiry_date;
	}

	public void setExpiry_date(int expiry_date) {
		this.expiry_date = expiry_date;
	}
	
	@Column(name="product_category", nullable=false)
	@Enumerated(EnumType.STRING)
	public ProductCategories getCategory() {
		return category;
	}

	public void setCategory(ProductCategories category) {
		this.category = category;
	}
	
	@Column(name="product_size") //not nullable because some products won't have size
	@Enumerated(EnumType.STRING)
	public ProductSizes getSize() {
		return size;
	}

	public void setSize(ProductSizes size) {
		this.size = size;
	}

	@Override
	public String toString() {
		return "Product [productId=" + productId + ", name=" + name + ", price=" + price + ", quantity=" + quantity
				+ ", expiry_date=" + expiry_date + ", category=" + category + ", size=" + size + "]";
	}
	
	
	//default constructor
	public Product() {
		// TODO Auto-generated constructor stub
	}
}
